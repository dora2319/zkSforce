// Copyright (c) 2013 Simon Fell
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce.
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//

#import "ZKMassEmailMessage.h"
#import "ZKEnvelope.h"

@interface ZKMassEmailMessage()
@property (strong,nonatomic) NSString             *a_description__v;
@property (strong,nonatomic) NSArray<NSString *>  *targetObjectIds__v;
@property (strong,nonatomic) NSString             *templateId__v;
@property (strong,nonatomic) NSArray<NSString *>  *whatIds__v;
@end

@implementation ZKMassEmailMessage


+(void)load {
    [self registerType:self xmlName:@"MassEmailMessage"];
}

+(ZKComplexTypeInfo *)wsdlSchema {
   static ZKComplexTypeInfo *wsdlSchema;
   static dispatch_once_t onceToken;
   dispatch_once(&onceToken, ^{
       wsdlSchema = [[ZKComplexTypeInfo alloc] initWithType:@"MassEmailMessage" parent:[ZKEmail class]
                    fields:@[
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"description" propertyName:@"a_description" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"targetObjectIds" propertyName:@"targetObjectIds" optional:YES nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"templateId" propertyName:@"templateId" optional:NO nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"whatIds" propertyName:@"whatIds" optional:YES nillable:NO],

                    ]];
   });
   return wsdlSchema;
}
    

-(NSString *)a_description {
    if ((fields__set2[0] & 0x1) == 0) {
        self.a_description__v = [self string:@"description"];
        fields__set2[0] |= 0x1; 
    }
    return self.a_description__v;
}
        

-(void)setA_description:(NSString *)v {
    self.a_description__v = v;
    fields__set2[0] |= 0x1; 
}
        

-(NSArray<NSString *> *)targetObjectIds {
    if ((fields__set2[0] & 0x2) == 0) {
        self.targetObjectIds__v = [self strings:@"targetObjectIds"];
        fields__set2[0] |= 0x2; 
    }
    return self.targetObjectIds__v;
}
        

-(void)setTargetObjectIds:(NSArray<NSString *> *)v {
    self.targetObjectIds__v = v;
    fields__set2[0] |= 0x2; 
}
        

-(NSString *)templateId {
    if ((fields__set2[0] & 0x4) == 0) {
        self.templateId__v = [self string:@"templateId"];
        fields__set2[0] |= 0x4; 
    }
    return self.templateId__v;
}
        

-(void)setTemplateId:(NSString *)v {
    self.templateId__v = v;
    fields__set2[0] |= 0x4; 
}
        

-(NSArray<NSString *> *)whatIds {
    if ((fields__set2[0] & 0x8) == 0) {
        self.whatIds__v = [self strings:@"whatIds"];
        fields__set2[0] |= 0x8; 
    }
    return self.whatIds__v;
}
        

-(void)setWhatIds:(NSArray<NSString *> *)v {
    self.whatIds__v = v;
    fields__set2[0] |= 0x8; 
}
        
-(void)serializeTo:(ZKXmlWriter *)env elemName:(NSString *)elemName {
	[env startElement:elemName type:@"MassEmailMessage"];
	[env addBoolElement:@"bccSender"        elemValue:self.bccSender];
	[env addElement:@"emailPriority"        elemValue:self.emailPriority     nillable:YES optional:NO];
	[env addElement:@"replyTo"              elemValue:self.replyTo           nillable:YES optional:NO];
	[env addBoolElement:@"saveAsActivity"   elemValue:self.saveAsActivity];
	[env addElement:@"senderDisplayName"    elemValue:self.senderDisplayName nillable:YES optional:NO];
	[env addElement:@"subject"              elemValue:self.subject           nillable:YES optional:NO];
	[env addBoolElement:@"useSignature"     elemValue:self.useSignature];
	[env addElement:@"description"          elemValue:self.a_description       nillable:YES optional:NO];
	[env addElementArray:@"targetObjectIds" elemValue:self.targetObjectIds];
	[env addElement:@"templateId"           elemValue:self.templateId        nillable:NO  optional:NO];
	[env addElementArray:@"whatIds"         elemValue:self.whatIds];
	[env endElement:elemName];
}
@end
