// Copyright (c) 2010 Ron Hess
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce.
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//

#import "ZKDescribeLayout.h"
#import "ZKEnvelope.h"
#import "ZKDescribeLayoutButtonSection.h"
#import "ZKDescribeLayoutFeedView.h"
#import "ZKDescribeLayoutSaveOption.h"
#import "ZKDescribeLayoutSection.h"
#import "ZKDescribeQuickActionListResult.h"
#import "ZKRelatedContent.h"
#import "ZKRelatedList.h"

@interface ZKDescribeLayout()
@property (strong,nonatomic) ZKDescribeLayoutButtonSection          *buttonLayoutSection__v;
@property (strong,nonatomic) NSArray<ZKDescribeLayoutSection *>     *detailLayoutSections__v;
@property (strong,nonatomic) NSArray<ZKDescribeLayoutSection *>     *editLayoutSections__v;
@property (strong,nonatomic) ZKDescribeLayoutFeedView               *feedView__v;
@property (strong,nonatomic) ZKDescribeLayoutSection                *highlightsPanelLayoutSection__v;
@property (strong,nonatomic) NSString                               *id__v;
@property (strong,nonatomic) ZKDescribeQuickActionListResult        *quickActionList__v;
@property (strong,nonatomic) ZKRelatedContent                       *relatedContent__v;
@property (strong,nonatomic) NSArray<ZKRelatedList *>               *relatedLists__v;
@property (strong,nonatomic) NSArray<ZKDescribeLayoutSaveOption *>  *saveOptions__v;
@end

@implementation ZKDescribeLayout


+(void)load {
    [self registerType:self xmlName:@"DescribeLayout"];
}

+(ZKComplexTypeInfo *)wsdlSchema {
   static ZKComplexTypeInfo *wsdlSchema;
   static dispatch_once_t onceToken;
   dispatch_once(&onceToken, ^{
       wsdlSchema = [[ZKComplexTypeInfo alloc] initWithType:@"DescribeLayout" parent:nil
                    fields:@[
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"buttonLayoutSection" propertyName:@"buttonLayoutSection" optional:YES nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"detailLayoutSections" propertyName:@"detailLayoutSections" optional:YES nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"editLayoutSections" propertyName:@"editLayoutSections" optional:YES nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"feedView" propertyName:@"feedView" optional:YES nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"highlightsPanelLayoutSection" propertyName:@"highlightsPanelLayoutSection" optional:YES nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"id" propertyName:@"id" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"quickActionList" propertyName:@"quickActionList" optional:YES nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"relatedContent" propertyName:@"relatedContent" optional:YES nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"relatedLists" propertyName:@"relatedLists" optional:YES nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"saveOptions" propertyName:@"saveOptions" optional:YES nillable:NO],

                    ]];
   });
   return wsdlSchema;
}
    

-(ZKDescribeLayoutButtonSection *)buttonLayoutSection {
    if ((fields__set[0] & 0x1) == 0) {
        self.buttonLayoutSection__v = [self complexTypeArrayFromElements:@"buttonLayoutSection" cls:[ZKDescribeLayoutButtonSection class]].lastObject;
        fields__set[0] |= 0x1; 
    }
    return self.buttonLayoutSection__v;
}
        

-(void)setButtonLayoutSection:(ZKDescribeLayoutButtonSection *)v {
    self.buttonLayoutSection__v = v;
    fields__set[0] |= 0x1; 
}
        

-(NSArray<ZKDescribeLayoutSection *> *)detailLayoutSections {
    if ((fields__set[0] & 0x2) == 0) {
        self.detailLayoutSections__v = [self complexTypeArrayFromElements:@"detailLayoutSections" cls:[ZKDescribeLayoutSection class]];
        fields__set[0] |= 0x2; 
    }
    return self.detailLayoutSections__v;
}
        

-(void)setDetailLayoutSections:(NSArray<ZKDescribeLayoutSection *> *)v {
    self.detailLayoutSections__v = v;
    fields__set[0] |= 0x2; 
}
        

-(NSArray<ZKDescribeLayoutSection *> *)editLayoutSections {
    if ((fields__set[0] & 0x4) == 0) {
        self.editLayoutSections__v = [self complexTypeArrayFromElements:@"editLayoutSections" cls:[ZKDescribeLayoutSection class]];
        fields__set[0] |= 0x4; 
    }
    return self.editLayoutSections__v;
}
        

-(void)setEditLayoutSections:(NSArray<ZKDescribeLayoutSection *> *)v {
    self.editLayoutSections__v = v;
    fields__set[0] |= 0x4; 
}
        

-(ZKDescribeLayoutFeedView *)feedView {
    if ((fields__set[0] & 0x8) == 0) {
        self.feedView__v = [self complexTypeArrayFromElements:@"feedView" cls:[ZKDescribeLayoutFeedView class]].lastObject;
        fields__set[0] |= 0x8; 
    }
    return self.feedView__v;
}
        

-(void)setFeedView:(ZKDescribeLayoutFeedView *)v {
    self.feedView__v = v;
    fields__set[0] |= 0x8; 
}
        

-(ZKDescribeLayoutSection *)highlightsPanelLayoutSection {
    if ((fields__set[0] & 0x10) == 0) {
        self.highlightsPanelLayoutSection__v = [self complexTypeArrayFromElements:@"highlightsPanelLayoutSection" cls:[ZKDescribeLayoutSection class]].lastObject;
        fields__set[0] |= 0x10; 
    }
    return self.highlightsPanelLayoutSection__v;
}
        

-(void)setHighlightsPanelLayoutSection:(ZKDescribeLayoutSection *)v {
    self.highlightsPanelLayoutSection__v = v;
    fields__set[0] |= 0x10; 
}
        

-(NSString *)id {
    if ((fields__set[0] & 0x20) == 0) {
        self.id__v = [self string:@"id"];
        fields__set[0] |= 0x20; 
    }
    return self.id__v;
}
        

-(void)setId:(NSString *)v {
    self.id__v = v;
    fields__set[0] |= 0x20; 
}
        

-(ZKDescribeQuickActionListResult *)quickActionList {
    if ((fields__set[0] & 0x40) == 0) {
        self.quickActionList__v = [self complexTypeArrayFromElements:@"quickActionList" cls:[ZKDescribeQuickActionListResult class]].lastObject;
        fields__set[0] |= 0x40; 
    }
    return self.quickActionList__v;
}
        

-(void)setQuickActionList:(ZKDescribeQuickActionListResult *)v {
    self.quickActionList__v = v;
    fields__set[0] |= 0x40; 
}
        

-(ZKRelatedContent *)relatedContent {
    if ((fields__set[0] & 0x80) == 0) {
        self.relatedContent__v = [self complexTypeArrayFromElements:@"relatedContent" cls:[ZKRelatedContent class]].lastObject;
        fields__set[0] |= 0x80; 
    }
    return self.relatedContent__v;
}
        

-(void)setRelatedContent:(ZKRelatedContent *)v {
    self.relatedContent__v = v;
    fields__set[0] |= 0x80; 
}
        

-(NSArray<ZKRelatedList *> *)relatedLists {
    if ((fields__set[0] & 0x100) == 0) {
        self.relatedLists__v = [self complexTypeArrayFromElements:@"relatedLists" cls:[ZKRelatedList class]];
        fields__set[0] |= 0x100; 
    }
    return self.relatedLists__v;
}
        

-(void)setRelatedLists:(NSArray<ZKRelatedList *> *)v {
    self.relatedLists__v = v;
    fields__set[0] |= 0x100; 
}
        

-(NSArray<ZKDescribeLayoutSaveOption *> *)saveOptions {
    if ((fields__set[0] & 0x200) == 0) {
        self.saveOptions__v = [self complexTypeArrayFromElements:@"saveOptions" cls:[ZKDescribeLayoutSaveOption class]];
        fields__set[0] |= 0x200; 
    }
    return self.saveOptions__v;
}
        

-(void)setSaveOptions:(NSArray<ZKDescribeLayoutSaveOption *> *)v {
    self.saveOptions__v = v;
    fields__set[0] |= 0x200; 
}
        
-(void)serializeTo:(ZKXmlWriter *)env elemName:(NSString *)elemName {
	[env startElement:elemName];
	[env addElement:@"buttonLayoutSection"          elemValue:self.buttonLayoutSection          nillable:NO  optional:YES];
	[env addElementArray:@"detailLayoutSections"    elemValue:self.detailLayoutSections];
	[env addElementArray:@"editLayoutSections"      elemValue:self.editLayoutSections];
	[env addElement:@"feedView"                     elemValue:self.feedView                     nillable:NO  optional:YES];
	[env addElement:@"highlightsPanelLayoutSection" elemValue:self.highlightsPanelLayoutSection nillable:NO  optional:YES];
	[env addElement:@"id"                           elemValue:self.id                           nillable:YES optional:NO];
	[env addElement:@"quickActionList"              elemValue:self.quickActionList              nillable:NO  optional:YES];
	[env addElement:@"relatedContent"               elemValue:self.relatedContent               nillable:NO  optional:YES];
	[env addElementArray:@"relatedLists"            elemValue:self.relatedLists];
	[env addElementArray:@"saveOptions"             elemValue:self.saveOptions];
	[env endElement:elemName];
}
@end
