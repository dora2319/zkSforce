// Copyright (c) 2013 Simon Fell
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce.
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//

#import "ZKXMLSerializable.h"
#import "ZKComplexTypeFieldInfo.h"
#import "ZKXmlDeserializer.h"
#import "ZKParser.h"

@class ZKSObject;

/*
<complexType name="LeadConvert" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fns="urn:fault.partner.soap.sforce.com" xmlns:tns="urn:partner.soap.sforce.com" xmlns:ens="urn:sobject.partner.soap.sforce.com">
  <sequence>
    <element nillable="true" type="tns:ID" name="accountId"/>
    <element nillable="true" type="ens:sObject" name="accountRecord"/>
    <element nillable="true" type="xsd:boolean" name="bypassAccountDedupeCheck"/>
    <element nillable="true" type="xsd:boolean" name="bypassContactDedupeCheck"/>
    <element nillable="true" type="tns:ID" name="contactId"/>
    <element nillable="true" type="ens:sObject" name="contactRecord"/>
    <element type="xsd:string" name="convertedStatus"/>
    <element type="xsd:boolean" name="doNotCreateOpportunity"/>
    <element type="tns:ID" name="leadId"/>
    <element nillable="true" type="tns:ID" name="opportunityId"/>
    <element nillable="true" type="xsd:string" name="opportunityName"/>
    <element nillable="true" type="ens:sObject" name="opportunityRecord"/>
    <element type="xsd:boolean" name="overwriteLeadSource"/>
    <element nillable="true" type="tns:ID" name="ownerId"/>
    <element nillable="true" type="tns:ID" name="relatedPersonAccountId"/>
    <element nillable="true" type="ens:sObject" name="relatedPersonAccountRecord"/>
    <element type="xsd:boolean" name="sendNotificationEmail"/>
  </sequence>
</complexType>
*/
@interface ZKLeadConvert : ZKXmlDeserializer <ZKXMLSerializable> {
	UInt32   fields__set[1];
}
+(ZKComplexTypeInfo *)wsdlSchema;

@property (strong,nonatomic) NSString   *accountId;
@property (strong,nonatomic) ZKSObject  *accountRecord;
@property (assign,nonatomic) BOOL        bypassAccountDedupeCheck;
@property (assign,nonatomic) BOOL        bypassContactDedupeCheck;
@property (strong,nonatomic) NSString   *contactId;
@property (strong,nonatomic) ZKSObject  *contactRecord;
@property (strong,nonatomic) NSString   *convertedStatus;
@property (assign,nonatomic) BOOL        doNotCreateOpportunity;
@property (strong,nonatomic) NSString   *leadId;
@property (strong,nonatomic) NSString   *opportunityId;
@property (strong,nonatomic) NSString   *opportunityName;
@property (strong,nonatomic) ZKSObject  *opportunityRecord;
@property (assign,nonatomic) BOOL        overwriteLeadSource;
@property (strong,nonatomic) NSString   *ownerId;
@property (strong,nonatomic) NSString   *relatedPersonAccountId;
@property (strong,nonatomic) ZKSObject  *relatedPersonAccountRecord;
@property (assign,nonatomic) BOOL        sendNotificationEmail;
@end
