// Copyright (c) 2011 Simon Fell
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce.
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//

#import "ZKDescribeTab.h"
#import "ZKEnvelope.h"
#import "ZKDescribeColor.h"
#import "ZKDescribeIcon.h"

@interface ZKDescribeTab()
@property (strong,nonatomic) NSArray   *colors__v;
@property (assign,nonatomic) BOOL       custom__v;
@property (strong,nonatomic) NSString  *iconUrl__v;
@property (strong,nonatomic) NSArray   *icons__v;
@property (strong,nonatomic) NSString  *label__v;
@property (strong,nonatomic) NSString  *miniIconUrl__v;
@property (strong,nonatomic) NSString  *name__v;
@property (strong,nonatomic) NSString  *sobjectName__v;
@property (strong,nonatomic) NSString  *url__v;
@end

@implementation ZKDescribeTab


+(void)load {
    [self registerType:self xmlName:@"DescribeTab"];
}

-(NSArray *)colors {
    if ((fields__set[0] & 0x1) == 0) {
        self.colors__v = [self complexTypeArrayFromElements:@"colors" cls:[ZKDescribeColor class]];
        fields__set[0] |= 0x1; 
    }
    return self.colors__v;
}
        

-(void)setColors:(NSArray *)v {
    self.colors__v = v;
    fields__set[0] |= 0x1; 
}
        

-(BOOL)custom {
    if ((fields__set[0] & 0x2) == 0) {
        self.custom__v = [self boolean:@"custom"];
        fields__set[0] |= 0x2; 
    }
    return self.custom__v;
}
        

-(void)setCustom:(BOOL)v {
    self.custom__v = v;
    fields__set[0] |= 0x2; 
}
        

-(NSString *)iconUrl {
    if ((fields__set[0] & 0x4) == 0) {
        self.iconUrl__v = [self string:@"iconUrl"];
        fields__set[0] |= 0x4; 
    }
    return self.iconUrl__v;
}
        

-(void)setIconUrl:(NSString *)v {
    self.iconUrl__v = v;
    fields__set[0] |= 0x4; 
}
        

-(NSArray *)icons {
    if ((fields__set[0] & 0x8) == 0) {
        self.icons__v = [self complexTypeArrayFromElements:@"icons" cls:[ZKDescribeIcon class]];
        fields__set[0] |= 0x8; 
    }
    return self.icons__v;
}
        

-(void)setIcons:(NSArray *)v {
    self.icons__v = v;
    fields__set[0] |= 0x8; 
}
        

-(NSString *)label {
    if ((fields__set[0] & 0x10) == 0) {
        self.label__v = [self string:@"label"];
        fields__set[0] |= 0x10; 
    }
    return self.label__v;
}
        

-(void)setLabel:(NSString *)v {
    self.label__v = v;
    fields__set[0] |= 0x10; 
}
        

-(NSString *)miniIconUrl {
    if ((fields__set[0] & 0x20) == 0) {
        self.miniIconUrl__v = [self string:@"miniIconUrl"];
        fields__set[0] |= 0x20; 
    }
    return self.miniIconUrl__v;
}
        

-(void)setMiniIconUrl:(NSString *)v {
    self.miniIconUrl__v = v;
    fields__set[0] |= 0x20; 
}
        

-(NSString *)name {
    if ((fields__set[0] & 0x40) == 0) {
        self.name__v = [self string:@"name"];
        fields__set[0] |= 0x40; 
    }
    return self.name__v;
}
        

-(void)setName:(NSString *)v {
    self.name__v = v;
    fields__set[0] |= 0x40; 
}
        

-(NSString *)sobjectName {
    if ((fields__set[0] & 0x80) == 0) {
        self.sobjectName__v = [self string:@"sobjectName"];
        fields__set[0] |= 0x80; 
    }
    return self.sobjectName__v;
}
        

-(void)setSobjectName:(NSString *)v {
    self.sobjectName__v = v;
    fields__set[0] |= 0x80; 
}
        

-(NSString *)url {
    if ((fields__set[0] & 0x100) == 0) {
        self.url__v = [self string:@"url"];
        fields__set[0] |= 0x100; 
    }
    return self.url__v;
}
        

-(void)setUrl:(NSString *)v {
    self.url__v = v;
    fields__set[0] |= 0x100; 
}
        
-(void)serializeTo:(ZKXmlWriter *)env elemName:(NSString *)elemName {
	[env startElement:elemName];
	[env addElementArray:@"colors" elemValue:self.colors];
	[env addBoolElement:@"custom"  elemValue:self.custom];
	[env addElement:@"iconUrl"     elemValue:self.iconUrl     nillable:NO  optional:NO];
	[env addElementArray:@"icons"  elemValue:self.icons];
	[env addElement:@"label"       elemValue:self.label       nillable:NO  optional:NO];
	[env addElement:@"miniIconUrl" elemValue:self.miniIconUrl nillable:NO  optional:NO];
	[env addElement:@"name"        elemValue:self.name        nillable:NO  optional:NO];
	[env addElement:@"sobjectName" elemValue:self.sobjectName nillable:YES optional:NO];
	[env addElement:@"url"         elemValue:self.url         nillable:NO  optional:NO];
	[env endElement:elemName];
}
@end
