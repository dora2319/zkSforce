// Copyright (c) 2015 Simon Fell
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce.
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//

#import "ZKDescribePathAssistantStep.h"
#import "ZKEnvelope.h"
#import "ZKDescribeLayoutSection.h"
#import "ZKDescribePathAssistantField.h"

@interface ZKDescribePathAssistantStep()
@property (assign,nonatomic) BOOL                                      closed__v;
@property (assign,nonatomic) BOOL                                      converted__v;
@property (strong,nonatomic) NSArray<ZKDescribePathAssistantField *>  *fields__v;
@property (strong,nonatomic) NSString                                 *info__v;
@property (strong,nonatomic) ZKDescribeLayoutSection                  *layoutSection__v;
@property (strong,nonatomic) NSString                                 *picklistLabel__v;
@property (strong,nonatomic) NSString                                 *picklistValue__v;
@property (assign,nonatomic) BOOL                                      won__v;
@end

@implementation ZKDescribePathAssistantStep


+(void)load {
    [self registerType:self xmlName:@"DescribePathAssistantStep"];
}

+(ZKComplexTypeInfo *)wsdlSchema {
   static ZKComplexTypeInfo *wsdlSchema;
   static dispatch_once_t onceToken;
   dispatch_once(&onceToken, ^{
       wsdlSchema = [[ZKComplexTypeInfo alloc] initWithType:@"DescribePathAssistantStep" parent:nil
                    fields:@[
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"closed" propertyName:@"closed" optional:NO nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"converted" propertyName:@"converted" optional:NO nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"fields" propertyName:@"fields" optional:YES nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"info" propertyName:@"info" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"layoutSection" propertyName:@"layoutSection" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"picklistLabel" propertyName:@"picklistLabel" optional:NO nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"picklistValue" propertyName:@"picklistValue" optional:NO nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"won" propertyName:@"won" optional:NO nillable:NO],

                    ]];
   });
   return wsdlSchema;
}
    

-(BOOL)closed {
    if ((fields__set[0] & 0x1) == 0) {
        self.closed__v = [self boolean:@"closed"];
        fields__set[0] |= 0x1; 
    }
    return self.closed__v;
}
        

-(void)setClosed:(BOOL)v {
    self.closed__v = v;
    fields__set[0] |= 0x1; 
}
        

-(BOOL)converted {
    if ((fields__set[0] & 0x2) == 0) {
        self.converted__v = [self boolean:@"converted"];
        fields__set[0] |= 0x2; 
    }
    return self.converted__v;
}
        

-(void)setConverted:(BOOL)v {
    self.converted__v = v;
    fields__set[0] |= 0x2; 
}
        

-(NSArray<ZKDescribePathAssistantField *> *)fields {
    if ((fields__set[0] & 0x4) == 0) {
        self.fields__v = [self complexTypeArrayFromElements:@"fields" cls:[ZKDescribePathAssistantField class]];
        fields__set[0] |= 0x4; 
    }
    return self.fields__v;
}
        

-(void)setFields:(NSArray<ZKDescribePathAssistantField *> *)v {
    self.fields__v = v;
    fields__set[0] |= 0x4; 
}
        

-(NSString *)info {
    if ((fields__set[0] & 0x8) == 0) {
        self.info__v = [self string:@"info"];
        fields__set[0] |= 0x8; 
    }
    return self.info__v;
}
        

-(void)setInfo:(NSString *)v {
    self.info__v = v;
    fields__set[0] |= 0x8; 
}
        

-(ZKDescribeLayoutSection *)layoutSection {
    if ((fields__set[0] & 0x10) == 0) {
        self.layoutSection__v = [self complexTypeArrayFromElements:@"layoutSection" cls:[ZKDescribeLayoutSection class]].lastObject;
        fields__set[0] |= 0x10; 
    }
    return self.layoutSection__v;
}
        

-(void)setLayoutSection:(ZKDescribeLayoutSection *)v {
    self.layoutSection__v = v;
    fields__set[0] |= 0x10; 
}
        

-(NSString *)picklistLabel {
    if ((fields__set[0] & 0x20) == 0) {
        self.picklistLabel__v = [self string:@"picklistLabel"];
        fields__set[0] |= 0x20; 
    }
    return self.picklistLabel__v;
}
        

-(void)setPicklistLabel:(NSString *)v {
    self.picklistLabel__v = v;
    fields__set[0] |= 0x20; 
}
        

-(NSString *)picklistValue {
    if ((fields__set[0] & 0x40) == 0) {
        self.picklistValue__v = [self string:@"picklistValue"];
        fields__set[0] |= 0x40; 
    }
    return self.picklistValue__v;
}
        

-(void)setPicklistValue:(NSString *)v {
    self.picklistValue__v = v;
    fields__set[0] |= 0x40; 
}
        

-(BOOL)won {
    if ((fields__set[0] & 0x80) == 0) {
        self.won__v = [self boolean:@"won"];
        fields__set[0] |= 0x80; 
    }
    return self.won__v;
}
        

-(void)setWon:(BOOL)v {
    self.won__v = v;
    fields__set[0] |= 0x80; 
}
        
-(void)serializeTo:(ZKXmlWriter *)env elemName:(NSString *)elemName {
	[env startElement:elemName];
	[env addBoolElement:@"closed"    elemValue:self.closed];
	[env addBoolElement:@"converted" elemValue:self.converted];
	[env addElementArray:@"fields"   elemValue:self.fields];
	[env addElement:@"info"          elemValue:self.info          nillable:YES optional:NO];
	[env addElement:@"layoutSection" elemValue:self.layoutSection nillable:YES optional:NO];
	[env addElement:@"picklistLabel" elemValue:self.picklistLabel nillable:NO  optional:NO];
	[env addElement:@"picklistValue" elemValue:self.picklistValue nillable:NO  optional:NO];
	[env addBoolElement:@"won"       elemValue:self.won];
	[env endElement:elemName];
}
@end
