// Copyright (c) 2013 Simon Fell
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce.
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//

#import "ZKProcessSubmitRequest.h"
#import "ZKEnvelope.h"

@interface ZKProcessSubmitRequest()
@property (strong,nonatomic) NSString  *objectId__v;
@property (strong,nonatomic) NSString  *submitterId__v;
@property (strong,nonatomic) NSString  *processDefinitionNameOrId__v;
@property (assign,nonatomic) BOOL       skipEntryCriteria__v;
@end

@implementation ZKProcessSubmitRequest


+(void)load {
    [self registerType:self xmlName:@"ProcessSubmitRequest"];
}

+(ZKComplexTypeInfo *)wsdlSchema {
   static ZKComplexTypeInfo *wsdlSchema;
   static dispatch_once_t onceToken;
   dispatch_once(&onceToken, ^{
       wsdlSchema = [[ZKComplexTypeInfo alloc] initWithType:@"ProcessSubmitRequest" parent:[ZKProcessRequest class]
                    fields:@[
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"objectId" propertyName:@"objectId" optional:NO nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"submitterId" propertyName:@"submitterId" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"processDefinitionNameOrId" propertyName:@"processDefinitionNameOrId" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"skipEntryCriteria" propertyName:@"skipEntryCriteria" optional:NO nillable:YES],

                    ]];
   });
   return wsdlSchema;
}
    

-(NSString *)objectId {
    if ((fields__set2[0] & 0x1) == 0) {
        self.objectId__v = [self string:@"objectId"];
        fields__set2[0] |= 0x1;
    }
    return self.objectId__v;
}

-(void)setObjectId:(NSString *)v {
    self.objectId__v = v;
    fields__set2[0] |= 0x1;
}


-(NSString *)submitterId {
    if ((fields__set2[0] & 0x2) == 0) {
        self.submitterId__v = [self string:@"submitterId"];
        fields__set2[0] |= 0x2;
    }
    return self.submitterId__v;
}

-(void)setSubmitterId:(NSString *)v {
    self.submitterId__v = v;
    fields__set2[0] |= 0x2;
}


-(NSString *)processDefinitionNameOrId {
    if ((fields__set2[0] & 0x4) == 0) {
        self.processDefinitionNameOrId__v = [self string:@"processDefinitionNameOrId"];
        fields__set2[0] |= 0x4;
    }
    return self.processDefinitionNameOrId__v;
}

-(void)setProcessDefinitionNameOrId:(NSString *)v {
    self.processDefinitionNameOrId__v = v;
    fields__set2[0] |= 0x4;
}


-(BOOL)skipEntryCriteria {
    if ((fields__set2[0] & 0x8) == 0) {
        self.skipEntryCriteria__v = [self boolean:@"skipEntryCriteria"];
        fields__set2[0] |= 0x8;
    }
    return self.skipEntryCriteria__v;
}

-(void)setSkipEntryCriteria:(BOOL)v {
    self.skipEntryCriteria__v = v;
    fields__set2[0] |= 0x8;
}

-(void)serializeTo:(ZKXmlWriter *)env elemName:(NSString *)elemName {
	[env startElement:elemName type:@"ProcessSubmitRequest"];
	[env addElement:@"comments"                  elemValue:self.comments                  nillable:YES optional:NO];
	[env addElementArray:@"nextApproverIds"      elemValue:self.nextApproverIds];
	[env addElement:@"objectId"                  elemValue:self.objectId                  nillable:NO  optional:NO];
	[env addElement:@"submitterId"               elemValue:self.submitterId               nillable:YES optional:NO];
	[env addElement:@"processDefinitionNameOrId" elemValue:self.processDefinitionNameOrId nillable:YES optional:NO];
	[env addBoolElement:@"skipEntryCriteria"     elemValue:self.skipEntryCriteria];
	[env endElement:elemName];
}
@end
