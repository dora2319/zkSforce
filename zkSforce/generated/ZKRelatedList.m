// Copyright (c) 2010 Ron Hess
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce.
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//

#import "ZKRelatedList.h"
#import "ZKEnvelope.h"
#import "ZKDescribeLayoutButton.h"
#import "ZKRelatedListColumn.h"
#import "ZKRelatedListSort.h"

@interface ZKRelatedList()
@property (strong,nonatomic) NSString  *accessLevelRequiredForCreate__v;
@property (strong,nonatomic) NSArray   *buttons__v;
@property (strong,nonatomic) NSArray   *columns__v;
@property (assign,nonatomic) BOOL       custom__v;
@property (strong,nonatomic) NSString  *field__v;
@property (strong,nonatomic) NSString  *label__v;
@property (assign,nonatomic) NSInteger  limitRows__v;
@property (strong,nonatomic) NSString  *name__v;
@property (strong,nonatomic) NSString  *sobject__v;
@property (strong,nonatomic) NSArray   *sort__v;
@end

@implementation ZKRelatedList


+(void)load {
    [self registerType:self xmlName:@"RelatedList"];
}

-(NSString *)accessLevelRequiredForCreate {
    if ((fields__set[0] & 0x1) == 0) {
        self.accessLevelRequiredForCreate__v = [self string:@"accessLevelRequiredForCreate"];
        fields__set[0] |= 0x1; 
    }
    return self.accessLevelRequiredForCreate__v;
}
        

-(void)setAccessLevelRequiredForCreate:(NSString *)v {
    self.accessLevelRequiredForCreate__v = v;
    fields__set[0] |= 0x1; 
}
        

-(NSArray *)buttons {
    if ((fields__set[0] & 0x2) == 0) {
        self.buttons__v = [self complexTypeArrayFromElements:@"buttons" cls:[ZKDescribeLayoutButton class]];
        fields__set[0] |= 0x2; 
    }
    return self.buttons__v;
}
        

-(void)setButtons:(NSArray *)v {
    self.buttons__v = v;
    fields__set[0] |= 0x2; 
}
        

-(NSArray *)columns {
    if ((fields__set[0] & 0x4) == 0) {
        self.columns__v = [self complexTypeArrayFromElements:@"columns" cls:[ZKRelatedListColumn class]];
        fields__set[0] |= 0x4; 
    }
    return self.columns__v;
}
        

-(void)setColumns:(NSArray *)v {
    self.columns__v = v;
    fields__set[0] |= 0x4; 
}
        

-(BOOL)custom {
    if ((fields__set[0] & 0x8) == 0) {
        self.custom__v = [self boolean:@"custom"];
        fields__set[0] |= 0x8; 
    }
    return self.custom__v;
}
        

-(void)setCustom:(BOOL)v {
    self.custom__v = v;
    fields__set[0] |= 0x8; 
}
        

-(NSString *)field {
    if ((fields__set[0] & 0x10) == 0) {
        self.field__v = [self string:@"field"];
        fields__set[0] |= 0x10; 
    }
    return self.field__v;
}
        

-(void)setField:(NSString *)v {
    self.field__v = v;
    fields__set[0] |= 0x10; 
}
        

-(NSString *)label {
    if ((fields__set[0] & 0x20) == 0) {
        self.label__v = [self string:@"label"];
        fields__set[0] |= 0x20; 
    }
    return self.label__v;
}
        

-(void)setLabel:(NSString *)v {
    self.label__v = v;
    fields__set[0] |= 0x20; 
}
        

-(NSInteger)limitRows {
    if ((fields__set[0] & 0x40) == 0) {
        self.limitRows__v = [self integer:@"limitRows"];
        fields__set[0] |= 0x40; 
    }
    return self.limitRows__v;
}
        

-(void)setLimitRows:(NSInteger)v {
    self.limitRows__v = v;
    fields__set[0] |= 0x40; 
}
        

-(NSString *)name {
    if ((fields__set[0] & 0x80) == 0) {
        self.name__v = [self string:@"name"];
        fields__set[0] |= 0x80; 
    }
    return self.name__v;
}
        

-(void)setName:(NSString *)v {
    self.name__v = v;
    fields__set[0] |= 0x80; 
}
        

-(NSString *)sobject {
    if ((fields__set[0] & 0x100) == 0) {
        self.sobject__v = [self string:@"sobject"];
        fields__set[0] |= 0x100; 
    }
    return self.sobject__v;
}
        

-(void)setSobject:(NSString *)v {
    self.sobject__v = v;
    fields__set[0] |= 0x100; 
}
        

-(NSArray *)sort {
    if ((fields__set[0] & 0x200) == 0) {
        self.sort__v = [self complexTypeArrayFromElements:@"sort" cls:[ZKRelatedListSort class]];
        fields__set[0] |= 0x200; 
    }
    return self.sort__v;
}
        

-(void)setSort:(NSArray *)v {
    self.sort__v = v;
    fields__set[0] |= 0x200; 
}
        
-(void)serializeTo:(ZKXmlWriter *)env elemName:(NSString *)elemName {
	[env startElement:elemName];
	[env addElement:@"accessLevelRequiredForCreate" elemValue:self.accessLevelRequiredForCreate nillable:YES optional:NO];
	[env addElementArray:@"buttons"                 elemValue:self.buttons];
	[env addElementArray:@"columns"                 elemValue:self.columns];
	[env addBoolElement:@"custom"                   elemValue:self.custom];
	[env addElement:@"field"                        elemValue:self.field                        nillable:YES optional:NO];
	[env addElement:@"label"                        elemValue:self.label                        nillable:NO  optional:NO];
	[env addIntElement:@"limitRows"                 elemValue:self.limitRows];
	[env addElement:@"name"                         elemValue:self.name                         nillable:NO  optional:NO];
	[env addElement:@"sobject"                      elemValue:self.sobject                      nillable:YES optional:NO];
	[env addElementArray:@"sort"                    elemValue:self.sort];
	[env endElement:elemName];
}
@end
