// Copyright (c) 2006 Simon Fell
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce.
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//

#import "ZKChildRelationship.h"
#import "ZKEnvelope.h"

@interface ZKChildRelationship()
@property (assign,nonatomic) BOOL       cascadeDelete__v;
@property (strong,nonatomic) NSString  *childSObject__v;
@property (assign,nonatomic) BOOL       deprecatedAndHidden__v;
@property (strong,nonatomic) NSString  *field__v;
@property (strong,nonatomic) NSArray   *junctionIdListNames__v;
@property (strong,nonatomic) NSArray   *junctionReferenceTo__v;
@property (strong,nonatomic) NSString  *relationshipName__v;
@property (assign,nonatomic) BOOL       restrictedDelete__v;
@end

@implementation ZKChildRelationship


+(void)load {
    [self registerType:self xmlName:@"ChildRelationship"];
}

+(ZKComplexTypeInfo *)wsdlSchema {
   static ZKComplexTypeInfo *wsdlSchema;
   static dispatch_once_t onceToken;
   dispatch_once(&onceToken, ^{
       wsdlSchema = [[ZKComplexTypeInfo alloc] initWithType:@"ChildRelationship" parent:nil
                    fields:@[
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"cascadeDelete" propertyName:@"cascadeDelete" optional:NO nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"childSObject" propertyName:@"childSObject" optional:NO nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"deprecatedAndHidden" propertyName:@"deprecatedAndHidden" optional:NO nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"field" propertyName:@"field" optional:NO nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"junctionIdListNames" propertyName:@"junctionIdListNames" optional:YES nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"junctionReferenceTo" propertyName:@"junctionReferenceTo" optional:YES nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"relationshipName" propertyName:@"relationshipName" optional:YES nillable:NO],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"restrictedDelete" propertyName:@"restrictedDelete" optional:YES nillable:NO],

                    ]];
   });
   return wsdlSchema;
}
    

-(BOOL)cascadeDelete {
    if ((fields__set[0] & 0x1) == 0) {
        self.cascadeDelete__v = [self boolean:@"cascadeDelete"];
        fields__set[0] |= 0x1; 
    }
    return self.cascadeDelete__v;
}
        

-(void)setCascadeDelete:(BOOL)v {
    self.cascadeDelete__v = v;
    fields__set[0] |= 0x1; 
}
        

-(NSString *)childSObject {
    if ((fields__set[0] & 0x2) == 0) {
        self.childSObject__v = [self string:@"childSObject"];
        fields__set[0] |= 0x2; 
    }
    return self.childSObject__v;
}
        

-(void)setChildSObject:(NSString *)v {
    self.childSObject__v = v;
    fields__set[0] |= 0x2; 
}
        

-(BOOL)deprecatedAndHidden {
    if ((fields__set[0] & 0x4) == 0) {
        self.deprecatedAndHidden__v = [self boolean:@"deprecatedAndHidden"];
        fields__set[0] |= 0x4; 
    }
    return self.deprecatedAndHidden__v;
}
        

-(void)setDeprecatedAndHidden:(BOOL)v {
    self.deprecatedAndHidden__v = v;
    fields__set[0] |= 0x4; 
}
        

-(NSString *)field {
    if ((fields__set[0] & 0x8) == 0) {
        self.field__v = [self string:@"field"];
        fields__set[0] |= 0x8; 
    }
    return self.field__v;
}
        

-(void)setField:(NSString *)v {
    self.field__v = v;
    fields__set[0] |= 0x8; 
}
        

-(NSArray *)junctionIdListNames {
    if ((fields__set[0] & 0x10) == 0) {
        self.junctionIdListNames__v = [self strings:@"junctionIdListNames"];
        fields__set[0] |= 0x10; 
    }
    return self.junctionIdListNames__v;
}
        

-(void)setJunctionIdListNames:(NSArray *)v {
    self.junctionIdListNames__v = v;
    fields__set[0] |= 0x10; 
}
        

-(NSArray *)junctionReferenceTo {
    if ((fields__set[0] & 0x20) == 0) {
        self.junctionReferenceTo__v = [self strings:@"junctionReferenceTo"];
        fields__set[0] |= 0x20; 
    }
    return self.junctionReferenceTo__v;
}
        

-(void)setJunctionReferenceTo:(NSArray *)v {
    self.junctionReferenceTo__v = v;
    fields__set[0] |= 0x20; 
}
        

-(NSString *)relationshipName {
    if ((fields__set[0] & 0x40) == 0) {
        self.relationshipName__v = [self string:@"relationshipName"];
        fields__set[0] |= 0x40; 
    }
    return self.relationshipName__v;
}
        

-(void)setRelationshipName:(NSString *)v {
    self.relationshipName__v = v;
    fields__set[0] |= 0x40; 
}
        

-(BOOL)restrictedDelete {
    if ((fields__set[0] & 0x80) == 0) {
        self.restrictedDelete__v = [self boolean:@"restrictedDelete"];
        fields__set[0] |= 0x80; 
    }
    return self.restrictedDelete__v;
}
        

-(void)setRestrictedDelete:(BOOL)v {
    self.restrictedDelete__v = v;
    fields__set[0] |= 0x80; 
}
        
-(void)serializeTo:(ZKXmlWriter *)env elemName:(NSString *)elemName {
	[env startElement:elemName];
	[env addBoolElement:@"cascadeDelete"        elemValue:self.cascadeDelete];
	[env addElement:@"childSObject"             elemValue:self.childSObject        nillable:NO  optional:NO];
	[env addBoolElement:@"deprecatedAndHidden"  elemValue:self.deprecatedAndHidden];
	[env addElement:@"field"                    elemValue:self.field               nillable:NO  optional:NO];
	[env addElementArray:@"junctionIdListNames" elemValue:self.junctionIdListNames];
	[env addElementArray:@"junctionReferenceTo" elemValue:self.junctionReferenceTo];
	[env addElement:@"relationshipName"         elemValue:self.relationshipName    nillable:NO  optional:YES];
	[env addBoolElement:@"restrictedDelete"     elemValue:self.restrictedDelete];
	[env endElement:elemName];
}
@end
