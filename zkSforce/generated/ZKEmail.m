// Copyright (c) 2013 Simon Fell
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce.
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//

#import "ZKEmail.h"
#import "ZKEnvelope.h"

@interface ZKEmail()
@property (assign,nonatomic) BOOL       bccSender__v;
@property (strong,nonatomic) NSString  *emailPriority__v;
@property (strong,nonatomic) NSString  *replyTo__v;
@property (assign,nonatomic) BOOL       saveAsActivity__v;
@property (strong,nonatomic) NSString  *senderDisplayName__v;
@property (strong,nonatomic) NSString  *subject__v;
@property (assign,nonatomic) BOOL       useSignature__v;
@end

@implementation ZKEmail


+(void)load {
    [self registerType:self xmlName:@"Email"];
}

+(ZKComplexTypeInfo *)wsdlSchema {
   static ZKComplexTypeInfo *wsdlSchema;
   static dispatch_once_t onceToken;
   dispatch_once(&onceToken, ^{
       wsdlSchema = [[ZKComplexTypeInfo alloc] initWithType:@"Email" parent:nil
                    fields:@[
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"bccSender" propertyName:@"bccSender" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"emailPriority" propertyName:@"emailPriority" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"replyTo" propertyName:@"replyTo" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"saveAsActivity" propertyName:@"saveAsActivity" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"senderDisplayName" propertyName:@"senderDisplayName" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"subject" propertyName:@"subject" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"useSignature" propertyName:@"useSignature" optional:NO nillable:YES],

                    ]];
   });
   return wsdlSchema;
}
    

-(BOOL)bccSender {
    if ((fields__set[0] & 0x1) == 0) {
        self.bccSender__v = [self boolean:@"bccSender"];
        fields__set[0] |= 0x1; 
    }
    return self.bccSender__v;
}
        

-(void)setBccSender:(BOOL)v {
    self.bccSender__v = v;
    fields__set[0] |= 0x1; 
}
        

-(NSString *)emailPriority {
    if ((fields__set[0] & 0x2) == 0) {
        self.emailPriority__v = [self string:@"emailPriority"];
        fields__set[0] |= 0x2; 
    }
    return self.emailPriority__v;
}
        

-(void)setEmailPriority:(NSString *)v {
    self.emailPriority__v = v;
    fields__set[0] |= 0x2; 
}
        

-(NSString *)replyTo {
    if ((fields__set[0] & 0x4) == 0) {
        self.replyTo__v = [self string:@"replyTo"];
        fields__set[0] |= 0x4; 
    }
    return self.replyTo__v;
}
        

-(void)setReplyTo:(NSString *)v {
    self.replyTo__v = v;
    fields__set[0] |= 0x4; 
}
        

-(BOOL)saveAsActivity {
    if ((fields__set[0] & 0x8) == 0) {
        self.saveAsActivity__v = [self boolean:@"saveAsActivity"];
        fields__set[0] |= 0x8; 
    }
    return self.saveAsActivity__v;
}
        

-(void)setSaveAsActivity:(BOOL)v {
    self.saveAsActivity__v = v;
    fields__set[0] |= 0x8; 
}
        

-(NSString *)senderDisplayName {
    if ((fields__set[0] & 0x10) == 0) {
        self.senderDisplayName__v = [self string:@"senderDisplayName"];
        fields__set[0] |= 0x10; 
    }
    return self.senderDisplayName__v;
}
        

-(void)setSenderDisplayName:(NSString *)v {
    self.senderDisplayName__v = v;
    fields__set[0] |= 0x10; 
}
        

-(NSString *)subject {
    if ((fields__set[0] & 0x20) == 0) {
        self.subject__v = [self string:@"subject"];
        fields__set[0] |= 0x20; 
    }
    return self.subject__v;
}
        

-(void)setSubject:(NSString *)v {
    self.subject__v = v;
    fields__set[0] |= 0x20; 
}
        

-(BOOL)useSignature {
    if ((fields__set[0] & 0x40) == 0) {
        self.useSignature__v = [self boolean:@"useSignature"];
        fields__set[0] |= 0x40; 
    }
    return self.useSignature__v;
}
        

-(void)setUseSignature:(BOOL)v {
    self.useSignature__v = v;
    fields__set[0] |= 0x40; 
}
        
-(void)serializeTo:(ZKXmlWriter *)env elemName:(NSString *)elemName {
	[env startElement:elemName];
	[env addBoolElement:@"bccSender"      elemValue:self.bccSender];
	[env addElement:@"emailPriority"      elemValue:self.emailPriority     nillable:YES optional:NO];
	[env addElement:@"replyTo"            elemValue:self.replyTo           nillable:YES optional:NO];
	[env addBoolElement:@"saveAsActivity" elemValue:self.saveAsActivity];
	[env addElement:@"senderDisplayName"  elemValue:self.senderDisplayName nillable:YES optional:NO];
	[env addElement:@"subject"            elemValue:self.subject           nillable:YES optional:NO];
	[env addBoolElement:@"useSignature"   elemValue:self.useSignature];
	[env endElement:elemName];
}
@end
