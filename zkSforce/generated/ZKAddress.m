// Copyright (c) 2014 Simon Fell
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce.
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//

#import "ZKAddress.h"
#import "ZKEnvelope.h"

@interface ZKAddress()
@property (strong,nonatomic) NSString  *city__v;
@property (strong,nonatomic) NSString  *country__v;
@property (strong,nonatomic) NSString  *countryCode__v;
@property (strong,nonatomic) NSString  *geocodeAccuracy__v;
@property (strong,nonatomic) NSString  *postalCode__v;
@property (strong,nonatomic) NSString  *state__v;
@property (strong,nonatomic) NSString  *stateCode__v;
@property (strong,nonatomic) NSString  *street__v;
@end

@implementation ZKAddress


+(void)load {
    [self registerType:self xmlName:@"address"];
}

+(ZKComplexTypeInfo *)wsdlSchema {
   static ZKComplexTypeInfo *wsdlSchema;
   static dispatch_once_t onceToken;
   dispatch_once(&onceToken, ^{
       wsdlSchema = [[ZKComplexTypeInfo alloc] initWithType:@"address" parent:[ZKLocation class]
                    fields:@[
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"city" propertyName:@"city" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"country" propertyName:@"country" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"countryCode" propertyName:@"countryCode" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"geocodeAccuracy" propertyName:@"geocodeAccuracy" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"postalCode" propertyName:@"postalCode" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"state" propertyName:@"state" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"stateCode" propertyName:@"stateCode" optional:NO nillable:YES],
                        [[ZKComplexTypeFieldInfo alloc] initWithElementName:@"street" propertyName:@"street" optional:NO nillable:YES],

                    ]];
   });
   return wsdlSchema;
}
    

-(NSString *)city {
    if ((fields__set2[0] & 0x1) == 0) {
        self.city__v = [self string:@"city"];
        fields__set2[0] |= 0x1;
    }
    return self.city__v;
}

-(void)setCity:(NSString *)v {
    self.city__v = v;
    fields__set2[0] |= 0x1;
}


-(NSString *)country {
    if ((fields__set2[0] & 0x2) == 0) {
        self.country__v = [self string:@"country"];
        fields__set2[0] |= 0x2;
    }
    return self.country__v;
}

-(void)setCountry:(NSString *)v {
    self.country__v = v;
    fields__set2[0] |= 0x2;
}


-(NSString *)countryCode {
    if ((fields__set2[0] & 0x4) == 0) {
        self.countryCode__v = [self string:@"countryCode"];
        fields__set2[0] |= 0x4;
    }
    return self.countryCode__v;
}

-(void)setCountryCode:(NSString *)v {
    self.countryCode__v = v;
    fields__set2[0] |= 0x4;
}


-(NSString *)geocodeAccuracy {
    if ((fields__set2[0] & 0x8) == 0) {
        self.geocodeAccuracy__v = [self string:@"geocodeAccuracy"];
        fields__set2[0] |= 0x8;
    }
    return self.geocodeAccuracy__v;
}

-(void)setGeocodeAccuracy:(NSString *)v {
    self.geocodeAccuracy__v = v;
    fields__set2[0] |= 0x8;
}


-(NSString *)postalCode {
    if ((fields__set2[0] & 0x10) == 0) {
        self.postalCode__v = [self string:@"postalCode"];
        fields__set2[0] |= 0x10;
    }
    return self.postalCode__v;
}

-(void)setPostalCode:(NSString *)v {
    self.postalCode__v = v;
    fields__set2[0] |= 0x10;
}


-(NSString *)state {
    if ((fields__set2[0] & 0x20) == 0) {
        self.state__v = [self string:@"state"];
        fields__set2[0] |= 0x20;
    }
    return self.state__v;
}

-(void)setState:(NSString *)v {
    self.state__v = v;
    fields__set2[0] |= 0x20;
}


-(NSString *)stateCode {
    if ((fields__set2[0] & 0x40) == 0) {
        self.stateCode__v = [self string:@"stateCode"];
        fields__set2[0] |= 0x40;
    }
    return self.stateCode__v;
}

-(void)setStateCode:(NSString *)v {
    self.stateCode__v = v;
    fields__set2[0] |= 0x40;
}


-(NSString *)street {
    if ((fields__set2[0] & 0x80) == 0) {
        self.street__v = [self string:@"street"];
        fields__set2[0] |= 0x80;
    }
    return self.street__v;
}

-(void)setStreet:(NSString *)v {
    self.street__v = v;
    fields__set2[0] |= 0x80;
}

-(void)serializeTo:(ZKXmlWriter *)env elemName:(NSString *)elemName {
	[env startElement:elemName type:@"address"];
	[env addDoubleElement:@"latitude"  elemValue:self.latitude];
	[env addDoubleElement:@"longitude" elemValue:self.longitude];
	[env addElement:@"city"            elemValue:self.city            nillable:YES optional:NO];
	[env addElement:@"country"         elemValue:self.country         nillable:YES optional:NO];
	[env addElement:@"countryCode"     elemValue:self.countryCode     nillable:YES optional:NO];
	[env addElement:@"geocodeAccuracy" elemValue:self.geocodeAccuracy nillable:YES optional:NO];
	[env addElement:@"postalCode"      elemValue:self.postalCode      nillable:YES optional:NO];
	[env addElement:@"state"           elemValue:self.state           nillable:YES optional:NO];
	[env addElement:@"stateCode"       elemValue:self.stateCode       nillable:YES optional:NO];
	[env addElement:@"street"          elemValue:self.street          nillable:YES optional:NO];
	[env endElement:elemName];
}
@end
