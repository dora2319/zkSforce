// Copyright (c) 2019 Simon Fell
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//
// 
// Note: This file was generated by WSDL2ZKSforce.
//		  see https://github.com/superfell/WSDL2ZKSforce
//       DO NOT HAND EDIT.
//


#import "ZKBaseClient.h"

@protocol ZKAuthenticationInfo;
@class ZKElement;
@class ZKAllOrNoneHeader;
@class ZKAllowFieldTruncationHeader;
@class ZKAssignmentRuleHeader;
@class ZKCallOptions;
@class ZKDebuggingHeader;
@class ZKDisableFeedTrackingHeader;
@class ZKDuplicateRuleHeader;
@class ZKEmailHeader;
@class ZKLocaleOptions;
@class ZKLoginScopeHeader;
@class ZKMruHeader;
@class ZKOwnerChangeOptions;
@class ZKPackageVersionHeader;
@class ZKQueryOptions;
@class ZKSessionHeader;
@class ZKStreamingEnabledHeader;
@class ZKUserTerritoryDeleteHeader;
@class ZKChangeOwnPasswordResult;
@class ZKDataCategoryGroupSobjectTypePair;
@class ZKDeleteByExampleResult;
@class ZKDeleteResult;
@class ZKDescribeAppMenuResult;
@class ZKDescribeApprovalLayoutResult;
@class ZKDescribeAvailableQuickActionResult;
@class ZKDescribeCompactLayout;
@class ZKDescribeCompactLayoutsResult;
@class ZKDescribeDataCategoryGroupResult;
@class ZKDescribeDataCategoryGroupStructureResult;
@class ZKDescribeDataCategoryMappingResult;
@class ZKDescribeGlobalSObject;
@class ZKDescribeGlobalTheme;
@class ZKDescribeLayoutResult;
@class ZKDescribeNounResult;
@class ZKDescribePathAssistantsResult;
@class ZKDescribeQuickActionResult;
@class ZKDescribeSObject;
@class ZKDescribeSearchLayoutResult;
@class ZKDescribeSearchScopeOrderResult;
@class ZKDescribeSearchableEntityResult;
@class ZKDescribeSoftphoneLayoutResult;
@class ZKDescribeSoqlListViewResult;
@class ZKDescribeSoqlListViewsRequest;
@class ZKDescribeTab;
@class ZKDescribeTabSetResult;
@class ZKDescribeThemeResult;
@class ZKDescribeVisualForceResult;
@class ZKEmail;
@class ZKEmptyRecycleBinResult;
@class ZKExecuteListViewRequest;
@class ZKExecuteListViewResult;
@class ZKFindDuplicatesResult;
@class ZKGetDeletedResult;
@class ZKGetServerTimestampResult;
@class ZKGetUpdatedResult;
@class ZKInvalidateSessionsResult;
@class ZKKnowledgeSettings;
@class ZKLeadConvert;
@class ZKLeadConvertResult;
@class ZKLoginResult;
@class ZKMergeRequest;
@class ZKMergeResult;
@class ZKPerformQuickActionRequest;
@class ZKPerformQuickActionResult;
@class ZKProcessRequest;
@class ZKProcessResult;
@class ZKQueryResult;
@class ZKQuickActionTemplateResult;
@class ZKRenderEmailTemplateRequest;
@class ZKRenderEmailTemplateResult;
@class ZKRenderStoredEmailTemplateRequest;
@class ZKRenderStoredEmailTemplateResult;
@class ZKResetPasswordResult;
@class ZKSObject;
@class ZKSaveResult;
@class ZKSearchResult;
@class ZKSendEmailResult;
@class ZKSetPasswordResult;
@class ZKUndeleteResult;
@class ZKUpsertResult;
@class ZKUserInfo;

@interface ZKSforceBaseClient : ZKBaseClient 

@property (strong) NSObject<ZKAuthenticationInfo> *authSource;

@property (strong,nonatomic) ZKAllOrNoneHeader             *allOrNoneHeader;
@property (strong,nonatomic) ZKAllowFieldTruncationHeader  *allowFieldTruncationHeader;
@property (strong,nonatomic) ZKAssignmentRuleHeader        *assignmentRuleHeader;
@property (strong,nonatomic) ZKCallOptions                 *callOptions;
@property (strong,nonatomic) ZKDebuggingHeader             *debuggingHeader;
@property (strong,nonatomic) ZKDisableFeedTrackingHeader   *disableFeedTrackingHeader;
@property (strong,nonatomic) ZKDuplicateRuleHeader         *duplicateRuleHeader;
@property (strong,nonatomic) ZKEmailHeader                 *emailHeader;
@property (strong,nonatomic) ZKLocaleOptions               *localeOptions;
@property (strong,nonatomic) ZKLoginScopeHeader            *loginScopeHeader;
@property (strong,nonatomic) ZKMruHeader                   *mruHeader;
@property (strong,nonatomic) ZKOwnerChangeOptions          *ownerChangeOptions;
@property (strong,nonatomic) ZKPackageVersionHeader        *packageVersionHeader;
@property (strong,nonatomic) ZKQueryOptions                *queryOptions;
@property (strong,nonatomic) ZKSessionHeader               *sessionHeader;
@property (strong,nonatomic) ZKStreamingEnabledHeader      *streamingEnabledHeader;
@property (strong,nonatomic) ZKUserTerritoryDeleteHeader   *userTerritoryDeleteHeader;

-(NSString *)makeLoginEnv:(NSString *)username password:(NSString *)password;
-(ZKLoginResult *)makeLoginResult:(ZKElement *)root;

-(NSString *)makeDescribeSObjectEnv:(NSString *)sObjectType;
-(ZKDescribeSObject *)makeDescribeSObjectResult:(ZKElement *)root;

-(NSString *)makeDescribeSObjectsEnv:(NSArray<NSString *> *)sObjectType;
-(NSArray<ZKDescribeSObject *> *)makeDescribeSObjectsResult:(ZKElement *)root;

-(NSString *)makeDescribeGlobalEnv;
-(NSArray<ZKDescribeGlobalSObject *> *)makeDescribeGlobalResult:(ZKElement *)root;

-(NSString *)makeDescribeDataCategoryGroupsEnv:(NSArray<NSString *> *)sObjectType;
-(NSArray<ZKDescribeDataCategoryGroupResult *> *)makeDescribeDataCategoryGroupsResult:(ZKElement *)root;

-(NSString *)makeDescribeDataCategoryGroupStructuresEnv:(NSArray<ZKDataCategoryGroupSobjectTypePair *> *)pairs topCategoriesOnly:(BOOL)topCategoriesOnly;
-(NSArray<ZKDescribeDataCategoryGroupStructureResult *> *)makeDescribeDataCategoryGroupStructuresResult:(ZKElement *)root;

-(NSString *)makeDescribeDataCategoryMappingsEnv;
-(NSArray<ZKDescribeDataCategoryMappingResult *> *)makeDescribeDataCategoryMappingsResult:(ZKElement *)root;

-(NSString *)makeDescribeKnowledgeSettingsEnv;
-(ZKKnowledgeSettings *)makeDescribeKnowledgeSettingsResult:(ZKElement *)root;

-(NSString *)makeDescribeAppMenuEnv:(NSString *)appMenuType networkId:(NSString *)networkId;
-(ZKDescribeAppMenuResult *)makeDescribeAppMenuResult:(ZKElement *)root;

-(NSString *)makeDescribeGlobalThemeEnv;
-(ZKDescribeGlobalTheme *)makeDescribeGlobalThemeResult:(ZKElement *)root;

-(NSString *)makeDescribeThemeEnv:(NSArray<NSString *> *)sobjectType;
-(ZKDescribeThemeResult *)makeDescribeThemeResult:(ZKElement *)root;

-(NSString *)makeDescribeLayoutEnv:(NSString *)sObjectType layoutName:(NSString *)layoutName recordTypeIds:(NSArray<NSString *> *)recordTypeIds;
-(ZKDescribeLayoutResult *)makeDescribeLayoutResult:(ZKElement *)root;

-(NSString *)makeDescribeSoftphoneLayoutEnv;
-(ZKDescribeSoftphoneLayoutResult *)makeDescribeSoftphoneLayoutResult:(ZKElement *)root;

-(NSString *)makeDescribeSearchLayoutsEnv:(NSArray<NSString *> *)sObjectType;
-(NSArray<ZKDescribeSearchLayoutResult *> *)makeDescribeSearchLayoutsResult:(ZKElement *)root;

-(NSString *)makeDescribeSearchableEntitiesEnv:(BOOL)includeOnlyEntitiesWithTabs;
-(NSArray<ZKDescribeSearchableEntityResult *> *)makeDescribeSearchableEntitiesResult:(ZKElement *)root;

-(NSString *)makeDescribeSearchScopeOrderEnv:(BOOL)includeRealTimeEntities;
-(NSArray<ZKDescribeSearchScopeOrderResult *> *)makeDescribeSearchScopeOrderResult:(ZKElement *)root;

-(NSString *)makeDescribeCompactLayoutsEnv:(NSString *)sObjectType recordTypeIds:(NSArray<NSString *> *)recordTypeIds;
-(ZKDescribeCompactLayoutsResult *)makeDescribeCompactLayoutsResult:(ZKElement *)root;

-(NSString *)makeDescribePathAssistantsEnv:(NSString *)sObjectType picklistValue:(NSString *)picklistValue recordTypeIds:(NSArray<NSString *> *)recordTypeIds;
-(ZKDescribePathAssistantsResult *)makeDescribePathAssistantsResult:(ZKElement *)root;

-(NSString *)makeDescribeApprovalLayoutEnv:(NSString *)sObjectType approvalProcessNames:(NSArray<NSString *> *)approvalProcessNames;
-(ZKDescribeApprovalLayoutResult *)makeDescribeApprovalLayoutResult:(ZKElement *)root;

-(NSString *)makeDescribeSoqlListViewsEnv:(ZKDescribeSoqlListViewsRequest *)request;
-(ZKDescribeSoqlListViewResult *)makeDescribeSoqlListViewsResult:(ZKElement *)root;

-(NSString *)makeExecuteListViewEnv:(ZKExecuteListViewRequest *)request;
-(ZKExecuteListViewResult *)makeExecuteListViewResult:(ZKElement *)root;

-(NSString *)makeDescribeSObjectListViewsEnv:(NSString *)sObjectType recentsOnly:(BOOL)recentsOnly isSoqlCompatible:(NSString *)isSoqlCompatible limit:(NSInteger)limit offset:(NSInteger)offset;
-(ZKDescribeSoqlListViewResult *)makeDescribeSObjectListViewsResult:(ZKElement *)root;

-(NSString *)makeDescribeTabsEnv;
-(NSArray<ZKDescribeTabSetResult *> *)makeDescribeTabsResult:(ZKElement *)root;

-(NSString *)makeDescribeAllTabsEnv;
-(NSArray<ZKDescribeTab *> *)makeDescribeAllTabsResult:(ZKElement *)root;

-(NSString *)makeDescribePrimaryCompactLayoutsEnv:(NSArray<NSString *> *)sObjectTypes;
-(NSArray<ZKDescribeCompactLayout *> *)makeDescribePrimaryCompactLayoutsResult:(ZKElement *)root;

-(NSString *)makeCreateEnv:(NSArray<ZKSObject *> *)sObjects;
-(NSArray<ZKSaveResult *> *)makeCreateResult:(ZKElement *)root;

-(NSString *)makeUpdateEnv:(NSArray<ZKSObject *> *)sObjects;
-(NSArray<ZKSaveResult *> *)makeUpdateResult:(ZKElement *)root;

-(NSString *)makeUpsertEnv:(NSString *)externalIDFieldName sObjects:(NSArray<ZKSObject *> *)sObjects;
-(NSArray<ZKUpsertResult *> *)makeUpsertResult:(ZKElement *)root;

-(NSString *)makeMergeEnv:(NSArray<ZKMergeRequest *> *)request;
-(NSArray<ZKMergeResult *> *)makeMergeResult:(ZKElement *)root;

-(NSString *)makeDeleteEnv:(NSArray<NSString *> *)ids;
-(NSArray<ZKDeleteResult *> *)makeDeleteResult:(ZKElement *)root;

-(NSString *)makeUndeleteEnv:(NSArray<NSString *> *)ids;
-(NSArray<ZKUndeleteResult *> *)makeUndeleteResult:(ZKElement *)root;

-(NSString *)makeEmptyRecycleBinEnv:(NSArray<NSString *> *)ids;
-(NSArray<ZKEmptyRecycleBinResult *> *)makeEmptyRecycleBinResult:(ZKElement *)root;

-(NSString *)makeRetrieveEnv:(NSString *)fieldList sObjectType:(NSString *)sObjectType ids:(NSArray<NSString *> *)ids;
-(NSDictionary *)makeRetrieveResult:(ZKElement *)root;

-(NSString *)makeProcessEnv:(NSArray<ZKProcessRequest *> *)actions;
-(NSArray<ZKProcessResult *> *)makeProcessResult:(ZKElement *)root;

-(NSString *)makeConvertLeadEnv:(NSArray<ZKLeadConvert *> *)leadConverts;
-(NSArray<ZKLeadConvertResult *> *)makeConvertLeadResult:(ZKElement *)root;

-(NSString *)makeLogoutEnv;
-(void)makeLogoutResult:(ZKElement *)root;

-(NSString *)makeInvalidateSessionsEnv:(NSArray<NSString *> *)sessionIds;
-(NSArray<ZKInvalidateSessionsResult *> *)makeInvalidateSessionsResult:(ZKElement *)root;

-(NSString *)makeGetDeletedEnv:(NSString *)sObjectType startDate:(NSDate *)startDate endDate:(NSDate *)endDate;
-(ZKGetDeletedResult *)makeGetDeletedResult:(ZKElement *)root;

-(NSString *)makeGetUpdatedEnv:(NSString *)sObjectType startDate:(NSDate *)startDate endDate:(NSDate *)endDate;
-(ZKGetUpdatedResult *)makeGetUpdatedResult:(ZKElement *)root;

-(NSString *)makeQueryEnv:(NSString *)queryString;
-(ZKQueryResult *)makeQueryResult:(ZKElement *)root;

-(NSString *)makeQueryAllEnv:(NSString *)queryString;
-(ZKQueryResult *)makeQueryAllResult:(ZKElement *)root;

-(NSString *)makeQueryMoreEnv:(NSString *)queryLocator;
-(ZKQueryResult *)makeQueryMoreResult:(ZKElement *)root;

-(NSString *)makeSearchEnv:(NSString *)searchString;
-(ZKSearchResult *)makeSearchResult:(ZKElement *)root;

-(NSString *)makeGetServerTimestampEnv;
-(ZKGetServerTimestampResult *)makeGetServerTimestampResult:(ZKElement *)root;

-(NSString *)makeSetPasswordEnv:(NSString *)userId password:(NSString *)password;
-(ZKSetPasswordResult *)makeSetPasswordResult:(ZKElement *)root;

-(NSString *)makeChangeOwnPasswordEnv:(NSString *)oldPassword a_newPassword:(NSString *)a_newPassword;
-(ZKChangeOwnPasswordResult *)makeChangeOwnPasswordResult:(ZKElement *)root;

-(NSString *)makeResetPasswordEnv:(NSString *)userId;
-(ZKResetPasswordResult *)makeResetPasswordResult:(ZKElement *)root;

-(NSString *)makeGetUserInfoEnv;
-(ZKUserInfo *)makeGetUserInfoResult:(ZKElement *)root;

-(NSString *)makeDeleteByExampleEnv:(NSArray<ZKSObject *> *)sObjects;
-(NSArray<ZKDeleteByExampleResult *> *)makeDeleteByExampleResult:(ZKElement *)root;

-(NSString *)makeSendEmailMessageEnv:(NSArray<NSString *> *)ids;
-(NSArray<ZKSendEmailResult *> *)makeSendEmailMessageResult:(ZKElement *)root;

-(NSString *)makeSendEmailEnv:(NSArray<ZKEmail *> *)messages;
-(NSArray<ZKSendEmailResult *> *)makeSendEmailResult:(ZKElement *)root;

-(NSString *)makeRenderEmailTemplateEnv:(NSArray<ZKRenderEmailTemplateRequest *> *)renderRequests;
-(NSArray<ZKRenderEmailTemplateResult *> *)makeRenderEmailTemplateResult:(ZKElement *)root;

-(NSString *)makeRenderStoredEmailTemplateEnv:(ZKRenderStoredEmailTemplateRequest *)request;
-(ZKRenderStoredEmailTemplateResult *)makeRenderStoredEmailTemplateResult:(ZKElement *)root;

-(NSString *)makePerformQuickActionsEnv:(NSArray<ZKPerformQuickActionRequest *> *)quickActions;
-(NSArray<ZKPerformQuickActionResult *> *)makePerformQuickActionsResult:(ZKElement *)root;

-(NSString *)makeDescribeQuickActionsEnv:(NSArray<NSString *> *)quickActions;
-(NSArray<ZKDescribeQuickActionResult *> *)makeDescribeQuickActionsResult:(ZKElement *)root;

-(NSString *)makeDescribeQuickActionsForRecordTypeEnv:(NSArray<NSString *> *)quickActions recordTypeId:(NSString *)recordTypeId;
-(NSArray<ZKDescribeQuickActionResult *> *)makeDescribeQuickActionsForRecordTypeResult:(ZKElement *)root;

-(NSString *)makeDescribeAvailableQuickActionsEnv:(NSString *)contextType;
-(NSArray<ZKDescribeAvailableQuickActionResult *> *)makeDescribeAvailableQuickActionsResult:(ZKElement *)root;

-(NSString *)makeRetrieveQuickActionTemplatesEnv:(NSArray<NSString *> *)quickActionNames contextId:(NSString *)contextId;
-(NSArray<ZKQuickActionTemplateResult *> *)makeRetrieveQuickActionTemplatesResult:(ZKElement *)root;

-(NSString *)makeRetrieveMassQuickActionTemplatesEnv:(NSString *)quickActionName contextIds:(NSArray<NSString *> *)contextIds;
-(NSArray<ZKQuickActionTemplateResult *> *)makeRetrieveMassQuickActionTemplatesResult:(ZKElement *)root;

-(NSString *)makeDescribeVisualForceEnv:(BOOL)includeAllDetails namespacePrefix:(NSString *)namespacePrefix;
-(ZKDescribeVisualForceResult *)makeDescribeVisualForceResult:(ZKElement *)root;

-(NSString *)makeFindDuplicatesEnv:(NSArray<ZKSObject *> *)sObjects;
-(NSArray<ZKFindDuplicatesResult *> *)makeFindDuplicatesResult:(ZKElement *)root;

-(NSString *)makeFindDuplicatesByIdsEnv:(NSArray<NSString *> *)ids;
-(NSArray<ZKFindDuplicatesResult *> *)makeFindDuplicatesByIdsResult:(ZKElement *)root;

-(NSString *)makeDescribeNounsEnv:(NSArray<NSString *> *)nouns onlyRenamed:(BOOL)onlyRenamed includeFields:(BOOL)includeFields;
-(NSArray<ZKDescribeNounResult *> *)makeDescribeNounsResult:(ZKElement *)root;

@end
